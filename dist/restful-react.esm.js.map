{"version":3,"file":"restful-react.esm.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/Context.tsx","../src/util/composeUrl.ts","../src/util/parseError.ts","../src/util/processResponse.ts","../src/util/resolveData.ts","../src/util/constructUrl.tsx","../src/Get.tsx","../src/Poll.tsx","../src/Mutate.tsx","../src/util/useDeepCompareEffect.ts","../src/useAbort.ts","../src/useGet.tsx","../src/useMutate.tsx"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; };\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) });\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: true });\n  defineProperty(\n    GeneratorFunctionPrototype,\n    \"constructor\",\n    { value: GeneratorFunction, configurable: true }\n  );\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    defineProperty(this, \"_invoke\", { value: enqueue });\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(val) {\n    var object = Object(val);\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import noop from \"lodash/noop\";\nimport * as React from \"react\";\nimport { IStringifyOptions } from \"qs\";\nimport { ResolveFunction } from \"./Get\";\n\nexport interface RestfulReactProviderProps<TData = any> {\n  /** The backend URL where the RESTful resources live. */\n  base: string;\n  /**\n   * The path that gets accumulated from each level of nesting\n   * taking the absolute and relative nature of each path into consideration\n   */\n  parentPath?: string;\n  /**\n   * A function to resolve data return from the backend, most typically\n   * used when the backend response needs to be adapted in some way.\n   */\n  resolve?: ResolveFunction<TData>;\n  /**\n   * Options passed to the fetch request.\n   */\n  requestOptions?:\n    | (<TRequestBody>(\n        url: string,\n        method: string,\n        requestBody?: TRequestBody,\n      ) => Partial<RequestInit> | Promise<Partial<RequestInit>>)\n    | Partial<RequestInit>;\n  /**\n   * Trigger on each error.\n   * For `Get` and `Mutation` calls, you can also call `retry` to retry the exact same request.\n   * Please note that it's quite hard to retrieve the response data after a retry mutation in this case.\n   * Depending on your case, it can be easier to add a `localErrorOnly` on your `Mutate` component\n   * to deal with your retry locally instead of in the provider scope.\n   */\n  onError?: (\n    err: {\n      message: string;\n      data: TData | string;\n      status?: number;\n    },\n    retry: () => Promise<TData | null>,\n    response?: Response,\n  ) => void;\n  /**\n   * Trigger on each request\n   */\n  onRequest?: (req: Request) => void;\n  /**\n   * Trigger on each response\n   */\n  onResponse?: (res: Response) => void;\n  /**\n   * Any global level query params?\n   * **Warning:** it's probably not a good idea to put API keys here. Consider headers instead.\n   */\n  queryParams?: { [key: string]: any };\n  /**\n   * Query parameter stringify options applied for each request.\n   */\n  queryParamStringifyOptions?: IStringifyOptions;\n\n  children?: React.ReactNode | React.ReactNode[];\n}\n\nexport const Context = React.createContext<Required<RestfulReactProviderProps>>({\n  base: \"\",\n  parentPath: \"\",\n  resolve: (data: any) => data,\n  requestOptions: {},\n  onError: noop,\n  onRequest: noop,\n  onResponse: noop,\n  queryParams: {},\n  queryParamStringifyOptions: {},\n  children: null,\n});\n\nexport interface InjectedProps {\n  onError: RestfulReactProviderProps[\"onError\"];\n  onRequest: RestfulReactProviderProps[\"onRequest\"];\n  onResponse: RestfulReactProviderProps[\"onResponse\"];\n}\n\nexport default class RestfulReactProvider<T> extends React.Component<RestfulReactProviderProps<T>> {\n  public static displayName = \"RestfulProviderContext\";\n\n  public render() {\n    const { children, ...value } = this.props;\n    return (\n      <Context.Provider\n        value={{\n          onError: noop,\n          onRequest: noop,\n          onResponse: noop,\n          resolve: (data: any) => data,\n          requestOptions: {},\n          parentPath: \"\",\n          queryParams: {},\n          queryParamStringifyOptions: {},\n          children: null,\n          ...value,\n        }}\n      >\n        {children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const RestfulReactConsumer = Context.Consumer;\n","import url from \"url\";\n\nexport const composeUrl = (base: string = \"\", parentPath: string = \"\", path: string = \"\"): string => {\n  const composedPath = composePath(parentPath, path);\n  /* If the base is empty, preceding slash will be trimmed during composition */\n  if (base === \"\" && composedPath.startsWith(\"/\")) {\n    return composedPath;\n  }\n\n  /* If the base contains a trailing slash, it will be trimmed during composition */\n  return base!.endsWith(\"/\") ? `${base!.slice(0, -1)}${composedPath}` : `${base}${composedPath}`;\n};\n\n/**\n * If the path starts with slash, it is considered as absolute url.\n * If not, it is considered as relative url.\n * For example,\n * parentPath = \"/someBasePath\" and path = \"/absolute\" resolves to \"/absolute\"\n * whereas,\n * parentPath = \"/someBasePath\" and path = \"relative\" resolves to \"/someBasePath/relative\"\n */\nexport const composePath = (parentPath: string = \"\", path: string = \"\"): string => {\n  if (path.startsWith(\"/\") && path.length > 1) {\n    return url.resolve(parentPath, path);\n  } else if (path !== \"\" && path !== \"/\") {\n    return `${parentPath}/${path}`;\n  } else {\n    return parentPath;\n  }\n};\n","export const parseError = (e: any) => {\n  const msg = parseErrorMessage(e);\n  return {\n    message: msg,\n    data: e as any,\n  };\n};\n\nexport const parseErrorMessage = (e: any) => {\n  let errMessage = \"Failed to fetch, unknown error\";\n\n  if (e instanceof Error) {\n    errMessage = `Failed to fetch: ${getErrorMessage(e)}`;\n  }\n  return errMessage;\n};\n\nexport const getErrorMessage = (e: any) => {\n  let errMessage = \"unknown error\";\n\n  if (e instanceof Error) {\n    errMessage = `${e.message}`;\n  }\n  return errMessage;\n};\n","import { parseErrorMessage } from \"./parseError\";\n\nexport const processResponse = async (response: Response) => {\n  if (response.status === 204) {\n    return { data: undefined, responseError: false };\n  }\n  if ((response.headers.get(\"content-type\") || \"\").includes(\"application/json\")) {\n    try {\n      return {\n        data: await response.json(),\n        responseError: false,\n      };\n    } catch (e) {\n      return {\n        data: parseErrorMessage(e),\n        responseError: true,\n      };\n    }\n  } else if (\n    (response.headers.get(\"content-type\") || \"\").includes(\"text/plain\") ||\n    (response.headers.get(\"content-type\") || \"\").includes(\"text/html\")\n  ) {\n    try {\n      return {\n        data: await response.text(),\n        responseError: false,\n      };\n    } catch (e) {\n      return {\n        data: parseErrorMessage(e),\n        responseError: true,\n      };\n    }\n  } else {\n    return {\n      data: response,\n      responseError: false,\n    };\n  }\n};\n","import { GetDataError, ResolveFunction } from \"../types\";\n\nexport const resolveData = async <TData, TError>({\n  data,\n  resolve,\n}: {\n  data: any;\n  resolve?: ResolveFunction<TData>;\n}): Promise<{ data: TData | null; error: GetDataError<TError> | null }> => {\n  let resolvedData: TData | null = null;\n  let resolveError: GetDataError<TError> | null = null;\n  try {\n    if (resolve) {\n      const resolvedDataOrPromise: TData | Promise<TData> = resolve(data);\n      resolvedData = (resolvedDataOrPromise as { then?: any }).then\n        ? ((await resolvedDataOrPromise) as TData)\n        : (resolvedDataOrPromise as TData);\n    } else {\n      resolvedData = data;\n    }\n  } catch (err) {\n    resolvedData = null;\n    resolveError = {\n      message: \"RESOLVE_ERROR\",\n      data: JSON.stringify(err),\n    };\n  }\n  return {\n    data: resolvedData,\n    error: resolveError,\n  };\n};\n","import qs, { IStringifyOptions } from \"qs\";\nimport url from \"url\";\n\ntype ResolvePathOptions = {\n  queryParamOptions?: IStringifyOptions;\n  stripTrailingSlash?: boolean;\n};\n\nexport function constructUrl<TQueryParams>(\n  base: string,\n  path: string,\n  queryParams?: TQueryParams,\n  resolvePathOptions: ResolvePathOptions = {},\n) {\n  const { queryParamOptions, stripTrailingSlash } = resolvePathOptions;\n\n  const normalizedBase = base.endsWith(\"/\") ? base : `${base}/`;\n  const trimmedPath = path.startsWith(\"/\") ? path.slice(1) : path;\n\n  const encodedPathWithParams = Object.keys(queryParams || {}).length\n    ? `${trimmedPath}?${qs.stringify(queryParams, queryParamOptions)}`\n    : trimmedPath;\n\n  const composed = Boolean(encodedPathWithParams) ? url.resolve(normalizedBase, encodedPathWithParams) : normalizedBase;\n\n  return stripTrailingSlash && composed.endsWith(\"/\") ? composed.slice(0, -1) : composed;\n}\n","import { DebounceSettings } from \"lodash\";\nimport debounce from \"lodash/debounce\";\nimport isEqual from \"lodash/isEqual\";\nimport * as React from \"react\";\n\nimport RestfulReactProvider, { InjectedProps, RestfulReactConsumer, RestfulReactProviderProps } from \"./Context\";\nimport { composePath, composeUrl } from \"./util/composeUrl\";\nimport { processResponse } from \"./util/processResponse\";\nimport { resolveData } from \"./util/resolveData\";\nimport { constructUrl } from \"./util/constructUrl\";\nimport { IStringifyOptions } from \"qs\";\nimport { parseError } from \"./util/parseError\";\n\n/**\n * A function that resolves returned data from\n * a fetch call.\n */\nexport type ResolveFunction<TData> = (data: any) => TData;\n\nexport interface GetDataError<TError> {\n  message: string;\n  data: TError | string;\n  status?: number;\n}\n\n/**\n * An enumeration of states that a fetchable\n * view could possibly have.\n */\nexport interface States<TData, TError> {\n  /** Is our view currently loading? */\n  loading: boolean;\n  /** Do we have an error in the view? */\n  error?: GetState<TData, TError>[\"error\"];\n}\n\nexport type GetMethod<TData> = () => Promise<TData | null>;\n\n/**\n * An interface of actions that can be performed\n * within Get\n */\nexport interface Actions<TData> {\n  /** Refetches the same path */\n  refetch: GetMethod<TData>;\n}\n\n/**\n * Meta information returned to the fetchable\n * view.\n */\nexport interface Meta {\n  /** The entire response object passed back from the request. */\n  response: Response | null;\n  /** The absolute path of this request. */\n  absolutePath: string;\n}\n\n/**\n * Props for the <Get /> component.\n */\nexport interface GetProps<TData, TError, TQueryParams, TPathParams> {\n  /**\n   * The path at which to request data,\n   * typically composed by parent Gets or the RestfulProvider.\n   */\n  path: string;\n  /**\n   * @private This is an internal implementation detail in restful-react, not meant to be used externally.\n   * This helps restful-react correctly override `path`s when a new `base` property is provided.\n   */\n  __internal_hasExplicitBase?: boolean;\n  /**\n   * A function that recieves the returned, resolved\n   * data.\n   *\n   * @param data - data returned from the request.\n   * @param actions - a key/value map of HTTP verbs, aliasing destroy to DELETE.\n   */\n  children: (data: TData | null, states: States<TData, TError>, actions: Actions<TData>, meta: Meta) => React.ReactNode;\n  /** Options passed into the fetch call. */\n  requestOptions?: RestfulReactProviderProps[\"requestOptions\"];\n  /**\n   * Path parameters\n   */\n  pathParams?: TPathParams;\n  /**\n   * Query parameters\n   */\n  queryParams?: TQueryParams;\n  /**\n   * Query parameter stringify options\n   */\n  queryParamStringifyOptions?: IStringifyOptions;\n  /**\n   * Don't send the error to the Provider\n   */\n  localErrorOnly?: boolean;\n  /**\n   * A function to resolve data return from the backend, most typically\n   * used when the backend response needs to be adapted in some way.\n   */\n  resolve?: ResolveFunction<TData>;\n  /**\n   * Should we wait until we have data before rendering?\n   * This is useful in cases where data is available too quickly\n   * to display a spinner or some type of loading state.\n   */\n  wait?: boolean;\n  /**\n   * Should we fetch data at a later stage?\n   */\n  lazy?: boolean;\n  /**\n   * An escape hatch and an alternative to `path` when you'd like\n   * to fetch from an entirely different URL.\n   *\n   */\n  base?: string;\n  /**\n   * The accumulated path from each level of parent GETs\n   *  taking the absolute and relative nature of each path into consideration\n   */\n  parentPath?: string;\n  /**\n   * How long do we wait between subsequent requests?\n   * Uses [lodash's debounce](https://lodash.com/docs/4.17.10#debounce) under the hood.\n   */\n  debounce?:\n    | {\n        wait?: number;\n        options: DebounceSettings;\n      }\n    | boolean\n    | number;\n}\n\n/**\n * State for the <Get /> component. These\n * are implementation details and should be\n * hidden from any consumers.\n */\nexport interface GetState<TData, TError> {\n  data: TData | null;\n  response: Response | null;\n  error: GetDataError<TError> | null;\n  loading: boolean;\n}\n\n/**\n * The <Get /> component without Context. This\n * is a named class because it is useful in\n * debugging.\n */\nclass ContextlessGet<TData, TError, TQueryParams, TPathParams = unknown> extends React.Component<\n  GetProps<TData, TError, TQueryParams, TPathParams> & InjectedProps,\n  Readonly<GetState<TData, TError>>\n> {\n  constructor(props: GetProps<TData, TError, TQueryParams, TPathParams> & InjectedProps) {\n    super(props);\n\n    if (typeof props.debounce === \"object\") {\n      this.fetch = debounce(this.fetch, props.debounce.wait, props.debounce.options);\n    } else if (typeof props.debounce === \"number\") {\n      this.fetch = debounce(this.fetch, props.debounce);\n    } else if (props.debounce) {\n      this.fetch = debounce(this.fetch);\n    }\n  }\n\n  /**\n   * Abort controller to cancel the current fetch query\n   */\n  private abortController = new AbortController();\n  private signal = this.abortController.signal;\n\n  public readonly state: Readonly<GetState<TData, TError>> = {\n    data: null, // Means we don't _yet_ have data.\n    response: null,\n    loading: !this.props.lazy,\n    error: null,\n  };\n\n  public static defaultProps = {\n    base: \"\",\n    parentPath: \"\",\n    resolve: (unresolvedData: any) => unresolvedData,\n    queryParams: {},\n  };\n\n  public componentDidMount() {\n    if (!this.props.lazy) {\n      this.fetch();\n    }\n  }\n\n  public componentDidUpdate(prevProps: GetProps<TData, TError, TQueryParams, TPathParams>) {\n    const { base, parentPath, path, resolve, queryParams, requestOptions } = prevProps;\n    if (\n      base !== this.props.base ||\n      parentPath !== this.props.parentPath ||\n      path !== this.props.path ||\n      !isEqual(queryParams, this.props.queryParams) ||\n      // both `resolve` props need to _exist_ first, and then be equivalent.\n      (resolve && this.props.resolve && resolve.toString() !== this.props.resolve.toString()) ||\n      (requestOptions &&\n        this.props.requestOptions &&\n        requestOptions.toString() !== this.props.requestOptions.toString())\n    ) {\n      if (!this.props.lazy) {\n        this.fetch();\n      }\n    }\n  }\n\n  public componentWillUnmount() {\n    this.abortController.abort();\n  }\n\n  public getRequestOptions = async (\n    url: string,\n    extraOptions?: Partial<RequestInit>,\n    extraHeaders?: boolean | { [key: string]: string },\n  ) => {\n    const { requestOptions } = this.props;\n\n    if (typeof requestOptions === \"function\") {\n      const options = (await requestOptions(url, \"GET\")) || {};\n      return {\n        ...extraOptions,\n        ...options,\n        headers: new Headers({\n          ...(typeof extraHeaders !== \"boolean\" ? extraHeaders : {}),\n          ...(extraOptions || {}).headers,\n          ...options.headers,\n        }),\n      };\n    }\n\n    return {\n      ...extraOptions,\n      ...requestOptions,\n      headers: new Headers({\n        ...(typeof extraHeaders !== \"boolean\" ? extraHeaders : {}),\n        ...(extraOptions || {}).headers,\n        ...(requestOptions || {}).headers,\n      }),\n    };\n  };\n\n  public fetch = async (requestPath?: string, thisRequestOptions?: RequestInit) => {\n    const { base, __internal_hasExplicitBase, parentPath, path, resolve, onError, onRequest, onResponse } = this.props;\n\n    if (this.state.error || !this.state.loading) {\n      this.setState(() => ({ error: null, loading: true }));\n    }\n\n    const makeRequestPath = () => {\n      const concatPath = __internal_hasExplicitBase ? path : composePath(parentPath, path);\n\n      return constructUrl(base!, concatPath, this.props.queryParams, {\n        stripTrailingSlash: true,\n        queryParamOptions: this.props.queryParamStringifyOptions,\n      });\n    };\n\n    const request = new Request(makeRequestPath(), await this.getRequestOptions(makeRequestPath(), thisRequestOptions));\n    if (onRequest) onRequest(request);\n    try {\n      const response = await fetch(request, { signal: this.signal });\n      const originalResponse = response.clone();\n      if (onResponse) onResponse(response.clone());\n      const { data, responseError } = await processResponse(response);\n\n      // avoid state updates when component has been unmounted\n      if (this.signal.aborted) {\n        return;\n      }\n\n      if (!response.ok || responseError) {\n        const error = {\n          message: `Failed to fetch: ${response.status} ${response.statusText}${responseError ? \" - \" + data : \"\"}`,\n          data,\n          status: response.status,\n        };\n\n        this.setState({\n          loading: false,\n          error,\n          data: null,\n          response: originalResponse,\n        });\n\n        if (!this.props.localErrorOnly && onError) {\n          onError(error, () => this.fetch(requestPath, thisRequestOptions), response);\n        }\n\n        return null;\n      }\n\n      const resolved = await resolveData<TData, TError>({ data, resolve });\n\n      this.setState({ loading: false, data: resolved.data, error: resolved.error, response: originalResponse });\n      return data;\n    } catch (e) {\n      // avoid state updates when component has been unmounted\n      // and when fetch/processResponse threw an error\n      if (this.signal.aborted) {\n        return;\n      }\n\n      this.setState({\n        loading: false,\n        data: null,\n        error: parseError(e),\n      });\n    }\n  };\n\n  public render() {\n    const { children, wait, path, base, parentPath } = this.props;\n    const { data, error, loading, response } = this.state;\n\n    if (wait && data === null && !error) {\n      return <></>; // Show nothing until we have data.\n    }\n\n    return children(\n      data,\n      { loading, error },\n      { refetch: this.fetch },\n      { response, absolutePath: composeUrl(base!, parentPath!, path) },\n    );\n  }\n}\n\n/**\n * The <Get /> component _with_ context.\n * Context is used to compose path props,\n * and to maintain the base property against\n * which all requests will be made.\n *\n * We compose Consumers immediately with providers\n * in order to provide new `parentPath` props that contain\n * a segment of the path, creating composable URLs.\n */\nfunction Get<TData = any, TError = any, TQueryParams = { [key: string]: any }, TPathParams = unknown>(\n  props: GetProps<TData, TError, TQueryParams, TPathParams>,\n) {\n  return (\n    <RestfulReactConsumer>\n      {contextProps => (\n        <RestfulReactProvider {...contextProps} parentPath={composePath(contextProps.parentPath, props.path)}>\n          <ContextlessGet\n            {...contextProps}\n            {...props}\n            queryParams={{ ...contextProps.queryParams, ...props.queryParams }}\n            __internal_hasExplicitBase={Boolean(props.base)}\n            queryParamStringifyOptions={{\n              ...contextProps.queryParamStringifyOptions,\n              ...props.queryParamStringifyOptions,\n            }}\n          />\n        </RestfulReactProvider>\n      )}\n    </RestfulReactConsumer>\n  );\n}\n\nexport default Get;\n","import merge from \"lodash/merge\";\nimport * as React from \"react\";\nimport equal from \"react-fast-compare\";\n\nimport { InjectedProps, RestfulReactConsumer } from \"./Context\";\nimport { GetProps, GetState, Meta as GetComponentMeta } from \"./Get\";\nimport { composeUrl } from \"./util/composeUrl\";\nimport { processResponse } from \"./util/processResponse\";\nimport { constructUrl } from \"./util/constructUrl\";\nimport { IStringifyOptions } from \"qs\";\n\n/**\n * Meta information returned from the poll.\n */\ninterface Meta extends GetComponentMeta {\n  /**\n   * The entire response object.\n   */\n  response: Response | null;\n}\n\n/**\n * States of the current poll\n */\ninterface States<TData, TError> {\n  /**\n   * Is the component currently polling?\n   */\n  polling: PollState<TData, TError>[\"polling\"];\n  /**\n   * Is the initial request loading?\n   */\n  loading: PollState<TData, TError>[\"loading\"];\n  /**\n   * Has the poll concluded?\n   */\n  finished: PollState<TData, TError>[\"finished\"];\n  /**\n   * Is there an error? What is it?\n   */\n  error: PollState<TData, TError>[\"error\"];\n}\n\n/**\n * Actions that can be executed within the\n * component.\n */\ninterface Actions {\n  start: () => void;\n  stop: () => void;\n}\n\n/**\n * Props that can control the Poll component.\n */\nexport interface PollProps<TData, TError, TQueryParams, TPathParams> {\n  /**\n   * What path are we polling on?\n   */\n  path: GetProps<TData, TError, TQueryParams, TPathParams>[\"path\"];\n  /**\n   * A function that gets polled data, the current\n   * states, meta information, and various actions\n   * that can be executed at the poll-level.\n   */\n  children: (data: TData | null, states: States<TData, TError>, actions: Actions, meta: Meta) => React.ReactNode;\n  /**\n   * How long do we wait between repeating a request?\n   * Value in milliseconds.\n   *\n   * Defaults to 1000.\n   */\n  interval?: number;\n  /**\n   * How long should a request stay open?\n   * Value in seconds.\n   *\n   * Defaults to 60.\n   */\n  wait?: number;\n  /**\n   * A stop condition for the poll that expects\n   * a boolean.\n   *\n   * @param data - The data returned from the poll.\n   * @param response - The full response object. This could be useful in order to stop polling when !response.ok, for example.\n   */\n  until?: (data: TData | null, response: Response | null) => boolean;\n  /**\n   * Are we going to wait to start the poll?\n   * Use this with { start, stop } actions.\n   */\n  lazy?: GetProps<TData, TError, TQueryParams, TPathParams>[\"lazy\"];\n  /**\n   * Should the data be transformed in any way?\n   */\n  resolve?: (data: any, prevData: TData | null) => TData;\n  /**\n   * We can request foreign URLs with this prop.\n   */\n  base?: GetProps<TData, TError, TQueryParams, TPathParams>[\"base\"];\n  /**\n   * Any options to be passed to this request.\n   */\n  requestOptions?: GetProps<TData, TError, TQueryParams, TPathParams>[\"requestOptions\"];\n  /**\n   * Query parameters\n   */\n  queryParams?: TQueryParams;\n  /**\n   * Query parameter stringify options\n   */\n  queryParamStringifyOptions?: IStringifyOptions;\n  /**\n   * Don't send the error to the Provider\n   */\n  localErrorOnly?: boolean;\n}\n\n/**\n * The state of the Poll component. This should contain\n * implementation details not necessarily exposed to\n * consumers.\n */\nexport interface PollState<TData, TError> {\n  /**\n   * Are we currently polling?\n   */\n  polling: boolean;\n  /**\n   * Have we finished polling?\n   */\n  finished: boolean;\n  /**\n   * What was the last response?\n   */\n  lastResponse: Response | null;\n  /**\n   * What data are we holding in here?\n   */\n  data: GetState<TData, TError>[\"data\"];\n  /**\n   * What data did we had before?\n   */\n  previousData: GetState<TData, TError>[\"data\"];\n  /**\n   * Are we loading?\n   */\n  loading: GetState<TData, TError>[\"loading\"];\n  /**\n   * Do we currently have an error?\n   */\n  error: GetState<TData, TError>[\"error\"];\n  /**\n   * Index of the last polled response.\n   */\n  lastPollIndex?: string;\n}\n\n/**\n * The <Poll /> component without context.\n */\nclass ContextlessPoll<TData, TError, TQueryParams, TPathParams = unknown> extends React.Component<\n  PollProps<TData, TError, TQueryParams, TPathParams> & InjectedProps,\n  Readonly<PollState<TData, TError>>\n> {\n  public readonly state: Readonly<PollState<TData, TError>> = {\n    data: null,\n    previousData: null,\n    loading: !this.props.lazy,\n    lastResponse: null,\n    polling: !this.props.lazy,\n    finished: false,\n    error: null,\n  };\n\n  public static defaultProps = {\n    interval: 1000,\n    wait: 60,\n    base: \"\",\n    resolve: (data: any) => data,\n    queryParams: {},\n  };\n\n  private keepPolling = !this.props.lazy;\n\n  /**\n   * Abort controller to cancel the current fetch query\n   */\n  private abortController = new AbortController();\n  private signal = this.abortController.signal;\n\n  private isModified = (response: Response, nextData: TData) => {\n    if (response.status === 304) {\n      return false;\n    }\n    if (equal(this.state.data, nextData)) {\n      return false;\n    }\n    return true;\n  };\n\n  private getRequestOptions = (url: string) =>\n    typeof this.props.requestOptions === \"function\"\n      ? this.props.requestOptions(url, \"GET\")\n      : this.props.requestOptions || {};\n\n  // 304 is not a OK status code but is green in Chrome 🤦🏾‍♂️\n  private isResponseOk = (response: Response) => response.ok || response.status === 304;\n\n  /**\n   * This thing does the actual poll.\n   */\n  public cycle = async () => {\n    // Have we stopped?\n    if (!this.keepPolling) {\n      return; // stop.\n    }\n\n    // Should we stop?\n    if (this.props.until && this.props.until(this.state.data, this.state.lastResponse)) {\n      this.stop(); // stop.\n      return;\n    }\n\n    // If we should keep going,\n    const { base, path, interval, wait, onError, onRequest, onResponse } = this.props;\n    const { lastPollIndex } = this.state;\n\n    const url = constructUrl(base!, path, this.props.queryParams, {\n      queryParamOptions: this.props.queryParamStringifyOptions,\n      stripTrailingSlash: true,\n    });\n\n    const requestOptions = await this.getRequestOptions(url);\n\n    const request = new Request(url, {\n      ...requestOptions,\n      headers: {\n        Prefer: `wait=${wait}s;${lastPollIndex ? `index=${lastPollIndex}` : \"\"}`,\n        ...requestOptions.headers,\n      },\n    });\n    if (onRequest) onRequest(request);\n\n    try {\n      const response = await fetch(request, { signal: this.signal });\n      if (onResponse) onResponse(response.clone());\n      const { data, responseError } = await processResponse(response);\n\n      if (!this.keepPolling || this.signal.aborted) {\n        // Early return if we have stopped polling or component was unmounted\n        // to avoid memory leaks\n        return;\n      }\n\n      if (!this.isResponseOk(response) || responseError) {\n        const error = {\n          message: `Failed to poll: ${response.status} ${response.statusText}${responseError ? \" - \" + data : \"\"}`,\n          data,\n          status: response.status,\n        };\n        this.setState({ loading: false, lastResponse: response, error });\n\n        if (!this.props.localErrorOnly && onError) {\n          onError(error, () => Promise.resolve(), response);\n        }\n      } else if (this.isModified(response, data)) {\n        this.setState(prevState => ({\n          loading: false,\n          lastResponse: response,\n          previousData: prevState.data,\n          data,\n          error: null,\n          lastPollIndex: response.headers.get(\"x-polling-index\") || undefined,\n        }));\n      }\n\n      // Wait for interval to pass.\n      await new Promise(resolvePromise => setTimeout(resolvePromise, interval));\n      this.cycle(); // Do it all again!\n    } catch (e) {\n      // the only error not catched is the `fetch`, this means that we have cancelled the fetch\n    }\n  };\n\n  public start = () => {\n    this.keepPolling = true;\n    if (!this.state.polling) {\n      this.setState(() => ({ polling: true })); // let everyone know we're done here.\n    }\n    this.cycle();\n  };\n\n  public stop = () => {\n    this.keepPolling = false;\n    this.setState(() => ({ polling: false, finished: true })); // let everyone know we're done here.\n  };\n\n  public componentDidMount() {\n    const { path, lazy } = this.props;\n\n    if (path === undefined) {\n      throw new Error(\n        `[restful-react]: You're trying to poll something without a path. Please specify a \"path\" prop on your Poll component.`,\n      );\n    }\n\n    if (!lazy) {\n      this.start();\n    }\n  }\n\n  public componentWillUnmount() {\n    // Cancel the current query\n    this.abortController.abort();\n\n    // Stop the polling cycle\n    this.stop();\n  }\n\n  public render() {\n    const { lastResponse: response, previousData, data, polling, loading, error, finished } = this.state;\n    const { children, base, path, resolve } = this.props;\n\n    const meta: Meta = {\n      response,\n      absolutePath: composeUrl(base!, \"\", path),\n    };\n\n    const states: States<TData, TError> = {\n      polling,\n      loading,\n      error,\n      finished,\n    };\n\n    const actions: Actions = {\n      stop: this.stop,\n      start: this.start,\n    };\n    // data is parsed only when poll has already resolved so response is defined\n    const resolvedData = response && resolve ? resolve(data, previousData) : data;\n    return children(resolvedData, states, actions, meta);\n  }\n}\n\nfunction Poll<TData = any, TError = any, TQueryParams = { [key: string]: any }, TPathParams = unknown>(\n  props: PollProps<TData, TError, TQueryParams, TPathParams>,\n) {\n  // Compose Contexts to allow for URL nesting\n  return (\n    <RestfulReactConsumer>\n      {contextProps => {\n        return (\n          <ContextlessPoll\n            {...contextProps}\n            {...props}\n            queryParams={{ ...contextProps.queryParams, ...props.queryParams }}\n            requestOptions={async (url: string, method: string) => {\n              const contextRequestOptions =\n                typeof contextProps.requestOptions === \"function\"\n                  ? await contextProps.requestOptions(url, method)\n                  : contextProps.requestOptions || {};\n              const propsRequestOptions =\n                typeof props.requestOptions === \"function\"\n                  ? await props.requestOptions(url, method)\n                  : props.requestOptions || {};\n\n              return merge(contextRequestOptions, propsRequestOptions);\n            }}\n            queryParamStringifyOptions={{\n              ...contextProps.queryParamStringifyOptions,\n              ...props.queryParamStringifyOptions,\n            }}\n          />\n        );\n      }}\n    </RestfulReactConsumer>\n  );\n}\n\nexport default Poll;\n","import * as React from \"react\";\nimport RestfulReactProvider, { InjectedProps, RestfulReactConsumer, RestfulReactProviderProps } from \"./Context\";\nimport { GetState, ResolveFunction } from \"./Get\";\nimport { composePath, composeUrl } from \"./util/composeUrl\";\nimport { processResponse } from \"./util/processResponse\";\nimport { constructUrl } from \"./util/constructUrl\";\nimport { IStringifyOptions } from \"qs\";\nimport { parseError } from \"./util/parseError\";\n\n/**\n * An enumeration of states that a fetchable\n * view could possibly have.\n */\nexport interface States<TData, TError> {\n  /** Is our view currently loading? */\n  loading: boolean;\n  /** Do we have an error in the view? */\n  error?: GetState<TData, TError>[\"error\"];\n}\n\nexport interface MutateRequestOptions<TQueryParams, TPathParams> extends RequestInit {\n  /**\n   * Query parameters\n   */\n  queryParams?: TQueryParams;\n  /**\n   * Path parameters\n   */\n  pathParams?: TPathParams;\n}\n\nexport type MutateMethod<TData, TRequestBody, TQueryParams, TPathParams> = (\n  data: TRequestBody,\n  mutateRequestOptions?: MutateRequestOptions<TQueryParams, TPathParams>,\n) => Promise<TData>;\n\n/**\n * Meta information returned to the fetchable\n * view.\n */\nexport interface Meta {\n  /** The absolute path of this request. */\n  absolutePath: string;\n}\n\n/**\n * Props for the <Mutate /> component.\n */\nexport interface MutateProps<TData, TError, TQueryParams, TRequestBody, TPathParams> {\n  /**\n   * The path at which to request data,\n   * typically composed by parents or the RestfulProvider.\n   */\n  path?: string;\n  /**\n   * @private This is an internal implementation detail in restful-react, not meant to be used externally.\n   * This helps restful-react correctly override `path`s when a new `base` property is provided.\n   */\n  __internal_hasExplicitBase?: boolean;\n  /**\n   * What HTTP verb are we using?\n   */\n  verb: \"POST\" | \"PUT\" | \"PATCH\" | \"DELETE\";\n  /**\n   * Query parameters\n   */\n  queryParams?: TQueryParams;\n  /**\n   * Query parameter stringify options\n   */\n  queryParamStringifyOptions?: IStringifyOptions;\n  /**\n   * An escape hatch and an alternative to `path` when you'd like\n   * to fetch from an entirely different URL.\n   *\n   */\n  base?: string;\n  /**\n   * The accumulated path from each level of parent GETs\n   *  taking the absolute and relative nature of each path into consideration\n   */\n  parentPath?: string;\n  /** Options passed into the fetch call. */\n  requestOptions?: RestfulReactProviderProps[\"requestOptions\"];\n  /**\n   * Don't send the error to the Provider\n   */\n  localErrorOnly?: boolean;\n  /**\n   * A function that recieves a mutation function, along with\n   * some metadata.\n   *\n   * @param actions - a key/value map of HTTP verbs, aliasing destroy to DELETE.\n   */\n  children: (\n    mutate: MutateMethod<TData, TRequestBody, TQueryParams, TPathParams>,\n    states: States<TData, TError>,\n    meta: Meta,\n  ) => React.ReactNode;\n  /**\n   * Callback called after the mutation is done.\n   *\n   * @param body - Body given to mutate\n   * @param data - Response data\n   */\n  onMutate?: (body: TRequestBody, data: TData) => void;\n  /**\n   * A function to encode body of DELETE requests when appending it\n   * to an existing path\n   */\n  pathInlineBodyEncode?: typeof encodeURIComponent;\n  /**\n   * A function to resolve data return from the backend, most typically\n   * used when the backend response needs to be adapted in some way.\n   */\n  resolve?: ResolveFunction<TData>;\n}\n\n/**\n * State for the <Mutate /> component. These\n * are implementation details and should be\n * hidden from any consumers.\n */\nexport interface MutateState<TData, TError> {\n  error: GetState<TData, TError>[\"error\"];\n  loading: boolean;\n}\n\n/**\n * The <Mutate /> component without Context. This\n * is a named class because it is useful in\n * debugging.\n */\nclass ContextlessMutate<TData, TError, TQueryParams, TRequestBody, TPathParams> extends React.Component<\n  MutateProps<TData, TError, TQueryParams, TRequestBody, TPathParams> & InjectedProps,\n  MutateState<TData, TError>\n> {\n  public readonly state: Readonly<MutateState<TData, TError>> = {\n    loading: false,\n    error: null,\n  };\n\n  public static defaultProps = {\n    base: \"\",\n    parentPath: \"\",\n    path: \"\",\n    queryParams: {},\n  };\n\n  /**\n   * Abort controller to cancel the current fetch query\n   */\n  private abortController = new AbortController();\n  private signal = this.abortController.signal;\n\n  public componentWillUnmount() {\n    this.abortController.abort();\n  }\n\n  public mutate = async (\n    body: TRequestBody,\n    mutateRequestOptions?: MutateRequestOptions<TQueryParams, TPathParams>,\n  ) => {\n    const {\n      __internal_hasExplicitBase,\n      base,\n      parentPath,\n      path,\n      verb,\n      requestOptions: providerRequestOptions,\n      onError,\n      onRequest,\n      onResponse,\n      pathInlineBodyEncode,\n      resolve,\n    } = this.props;\n    this.setState(() => ({ error: null, loading: true }));\n\n    const makeRequestPath = () => {\n      const pathWithPossibleBody =\n        verb === \"DELETE\" && typeof body === \"string\"\n          ? composePath(path, pathInlineBodyEncode ? pathInlineBodyEncode(body) : body)\n          : path;\n\n      const concatPath = __internal_hasExplicitBase\n        ? pathWithPossibleBody || \"\"\n        : composePath(parentPath, pathWithPossibleBody);\n\n      return constructUrl(base!, concatPath, this.props.queryParams, {\n        stripTrailingSlash: true,\n        queryParamOptions: this.props.queryParamStringifyOptions,\n      });\n    };\n\n    const request = new Request(makeRequestPath(), {\n      method: verb,\n      body: body instanceof FormData ? body : typeof body === \"object\" ? JSON.stringify(body) : body,\n      ...(typeof providerRequestOptions === \"function\"\n        ? await providerRequestOptions<TRequestBody>(makeRequestPath(), verb, body)\n        : providerRequestOptions),\n      ...mutateRequestOptions,\n      headers: {\n        ...(typeof providerRequestOptions === \"function\"\n          ? (await providerRequestOptions<TRequestBody>(makeRequestPath(), verb, body)).headers\n          : (providerRequestOptions || {}).headers),\n        ...(mutateRequestOptions ? mutateRequestOptions.headers : {}),\n      },\n    } as RequestInit); // Type assertion for version of TypeScript that can't yet discriminate.\n\n    // only set default content-type if body is not of type FormData and there is no content-type already defined on mutateRequestOptions.headers\n    if (!(body instanceof FormData) && !request.headers.has(\"content-type\")) {\n      request.headers.set(\"content-type\", typeof body === \"object\" ? \"application/json\" : \"text/plain\");\n    }\n\n    if (onRequest) onRequest(request);\n\n    let response: Response;\n    try {\n      response = await fetch(request, { signal: this.signal });\n      if (onResponse) onResponse(response.clone());\n    } catch (e) {\n      const error = parseError(e);\n      this.setState({\n        error,\n        loading: false,\n      });\n\n      if (!this.props.localErrorOnly && onError) {\n        onError(error, () => this.mutate(body, mutateRequestOptions));\n      }\n\n      throw error;\n    }\n\n    const { data: rawData, responseError } = await processResponse(response);\n\n    let data: TData | any; // `any` -> data in error case\n    try {\n      data = resolve ? resolve(rawData) : rawData;\n    } catch (e) {\n      if (this.signal.aborted) {\n        return;\n      }\n\n      this.setState({\n        error: parseError(e),\n        loading: false,\n      });\n      throw e;\n    }\n\n    // avoid state updates when component has been unmounted\n    if (this.signal.aborted) {\n      return;\n    }\n    if (!response.ok || responseError) {\n      const error = {\n        data,\n        message: `Failed to fetch: ${response.status} ${response.statusText}`,\n        status: response.status,\n      };\n\n      this.setState({\n        error,\n        loading: false,\n      });\n\n      if (!this.props.localErrorOnly && onError) {\n        onError(error, () => this.mutate(body, mutateRequestOptions), response);\n      }\n\n      throw error;\n    }\n\n    this.setState({ loading: false });\n\n    if (this.props.onMutate) {\n      this.props.onMutate(body, data);\n    }\n\n    return data;\n  };\n\n  public render() {\n    const { children, path, base, parentPath } = this.props;\n    const { error, loading } = this.state;\n\n    return children(this.mutate, { loading, error }, { absolutePath: composeUrl(base!, parentPath!, path!) });\n  }\n}\n\n/**\n * The <Mutate /> component _with_ context.\n * Context is used to compose path props,\n * and to maintain the base property against\n * which all requests will be made.\n *\n * We compose Consumers immediately with providers\n * in order to provide new `parentPath` props that contain\n * a segment of the path, creating composable URLs.\n */\nfunction Mutate<\n  TData = any,\n  TError = any,\n  TQueryParams = { [key: string]: any },\n  TRequestBody = any,\n  TPathParams = unknown\n>(props: MutateProps<TData, TError, TQueryParams, TRequestBody, TPathParams>) {\n  return (\n    <RestfulReactConsumer>\n      {contextProps => (\n        <RestfulReactProvider {...contextProps} parentPath={composePath(contextProps.parentPath, props.path!)}>\n          <ContextlessMutate<TData, TError, TQueryParams, TRequestBody, TPathParams>\n            {...contextProps}\n            {...props}\n            queryParams={{ ...contextProps.queryParams, ...props.queryParams } as TQueryParams}\n            queryParamStringifyOptions={{\n              ...contextProps.queryParamStringifyOptions,\n              ...props.queryParamStringifyOptions,\n            }}\n            __internal_hasExplicitBase={Boolean(props.base)}\n          />\n        </RestfulReactProvider>\n      )}\n    </RestfulReactConsumer>\n  );\n}\n\nexport default Mutate;\n","import isEqualWith from \"lodash/isEqualWith\";\nimport React, { useCallback, useEffect, useRef } from \"react\";\n\n/**\n * Custom version of isEqual to handle function comparison\n */\nconst isEqual = (x: any, y: any) =>\n  isEqualWith(x, y, (a, b) => {\n    // Deal with the function comparison case\n    if (typeof a === \"function\" && typeof b === \"function\") {\n      return a.toString() === b.toString();\n    }\n    // Fallback on the method\n    return undefined;\n  });\n\nfunction useDeepCompareMemoize(value: Readonly<any>) {\n  const ref = useRef<any>();\n\n  if (!isEqual(value, ref.current)) {\n    ref.current = value;\n  }\n\n  return ref.current;\n}\n\n/**\n * Accepts a function that contains imperative, possibly effectful code.\n *\n * This is the deepCompare version of the `React.useEffect` hooks (that is shallowed compare)\n *\n * @param effect Imperative function that can return a cleanup function\n * @param deps If present, effect will only activate if the values in the list change.\n *\n * @see https://gist.github.com/kentcdodds/fb8540a05c43faf636dd68647747b074#gistcomment-2830503\n */\nexport function useDeepCompareEffect<T>(effect: React.EffectCallback, deps: T) {\n  useEffect(effect, useDeepCompareMemoize(deps as Readonly<any>));\n}\n\nexport function useDeepCompareCallback<T extends (...args: any[]) => any>(callback: T, deps: readonly any[]) {\n  return useCallback(callback, useDeepCompareMemoize(deps));\n}\n","import { useCallback, useRef } from \"react\";\n\nfunction createAbortController() {\n  try {\n    return new AbortController();\n  } catch {\n    return undefined;\n  }\n}\n\nexport function useAbort() {\n  const instance = useRef(createAbortController());\n\n  const abort = useCallback(() => {\n    if (instance && instance.current) {\n      instance.current.abort();\n      instance.current = createAbortController();\n    }\n  }, [instance]);\n\n  return {\n    abort,\n    getAbortSignal() {\n      return instance?.current?.signal;\n    },\n  };\n}\n","import { useContext, useState, useCallback, useEffect } from \"react\";\nimport { Cancelable, DebounceSettings } from \"lodash\";\nimport debounce from \"lodash/debounce\";\nimport merge from \"lodash/merge\";\nimport { IStringifyOptions } from \"qs\";\n\nimport { Context, RestfulReactProviderProps } from \"./Context\";\nimport { GetState } from \"./Get\";\nimport { processResponse } from \"./util/processResponse\";\nimport { useDeepCompareCallback } from \"./util/useDeepCompareEffect\";\nimport { useAbort } from \"./useAbort\";\nimport { constructUrl } from \"./util/constructUrl\";\nimport { parseError } from \"./util/parseError\";\n\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n\nexport interface UseGetProps<TData, TError, TQueryParams, TPathParams> {\n  /**\n   * The path at which to request data,\n   * typically composed by parent Gets or the RestfulProvider.\n   */\n  path: string | ((pathParams: TPathParams) => string);\n  /**\n   * Path Parameters\n   */\n  pathParams?: TPathParams;\n  /** Options passed into the fetch call. */\n  requestOptions?: RestfulReactProviderProps[\"requestOptions\"];\n  /**\n   * Query parameters\n   */\n  queryParams?: TQueryParams;\n  /**\n   * Query parameter stringify options\n   */\n  queryParamStringifyOptions?: IStringifyOptions;\n  /**\n   * Don't send the error to the Provider\n   */\n  localErrorOnly?: boolean;\n  /**\n   * A function to resolve data return from the backend, most typically\n   * used when the backend response needs to be adapted in some way.\n   */\n  resolve?: (data: any) => TData;\n  /**\n   * Developer mode\n   * Override the state with some mocks values and avoid to fetch\n   */\n  mock?: { data?: TData; error?: TError; loading?: boolean; response?: Response };\n  /**\n   * Should we fetch data at a later stage?\n   */\n  lazy?: boolean;\n  /**\n   * An escape hatch and an alternative to `path` when you'd like\n   * to fetch from an entirely different URL.\n   *\n   */\n  base?: string;\n  /**\n   * How long do we wait between subsequent requests?\n   * Uses [lodash's debounce](https://lodash.com/docs/4.17.10#debounce) under the hood.\n   */\n  debounce?:\n    | {\n        wait?: number;\n        options: DebounceSettings;\n      }\n    | boolean\n    | number;\n}\n\ntype FetchData<TData, TError, TQueryParams, PathParams = unknown> = (\n  props: UseGetProps<TData, TError, TQueryParams, PathParams>,\n  context: RestfulReactProviderProps,\n  abort: () => void,\n  getAbortSignal: () => AbortSignal | undefined,\n) => Promise<void>;\ntype CancellableFetchData<TData, TError, TQueryParams, TPathParams> =\n  | FetchData<TData, TError, TQueryParams, TPathParams>\n  | (FetchData<TData, TError, TQueryParams, TPathParams> & Cancelable);\ntype RefetchOptions<TData, TError, TQueryParams, TPathParams> = Partial<\n  Omit<UseGetProps<TData, TError, TQueryParams, TPathParams>, \"lazy\">\n>;\n\nconst isCancellable = <T extends (...args: any[]) => any>(func: T): func is T & Cancelable => {\n  return typeof (func as any).cancel === \"function\" && typeof (func as any).flush === \"function\";\n};\n\nexport interface UseGetReturn<TData, TError, TQueryParams = {}, TPathParams = unknown> extends GetState<TData, TError> {\n  /**\n   * Absolute path resolved from `base` and `path` (context & local)\n   */\n  absolutePath: string;\n  /**\n   * Cancel the current fetch\n   */\n  cancel: () => void;\n  /**\n   * Refetch\n   */\n  refetch: (options?: RefetchOptions<TData, TError, TQueryParams, TPathParams>) => Promise<TData | null>;\n}\n\nexport function useGet<TData = any, TError = any, TQueryParams = { [key: string]: any }, TPathParams = unknown>(\n  path: UseGetProps<TData, TError, TQueryParams, TPathParams>[\"path\"],\n  props?: Omit<UseGetProps<TData, TError, TQueryParams, TPathParams>, \"path\">,\n): UseGetReturn<TData, TError, TQueryParams>;\n\nexport function useGet<TData = any, TError = any, TQueryParams = { [key: string]: any }, TPathParams = unknown>(\n  props: UseGetProps<TData, TError, TQueryParams, TPathParams>,\n): UseGetReturn<TData, TError, TQueryParams>;\n\nexport function useGet<TData = any, TError = any, TQueryParams = { [key: string]: any }, TPathParams = unknown>() {\n  const props: UseGetProps<TData, TError, TQueryParams, TPathParams> =\n    typeof arguments[0] === \"object\" ? arguments[0] : { ...arguments[1], path: arguments[0] };\n\n  const context = useContext(Context);\n  const { path, pathParams = {} } = props;\n\n  const [state, setState] = useState<GetState<TData, TError>>({\n    data: null,\n    response: null,\n    loading: !props.lazy,\n    error: null,\n  });\n\n  const { abort, getAbortSignal } = useAbort();\n\n  const pathStr = typeof path === \"function\" ? path(pathParams as TPathParams) : path;\n\n  const _fetchData = useDeepCompareCallback<FetchData<TData, TError, TQueryParams, TPathParams>>(\n    async (props, context, abort, getAbortSignal) => {\n      const {\n        base = context.base,\n        path,\n        resolve = context.resolve || ((d: any) => d as TData),\n        queryParams = {},\n        queryParamStringifyOptions = {},\n        requestOptions,\n        pathParams = {},\n      } = props;\n\n      setState(prev => {\n        if (prev.error || !prev.loading) {\n          return { ...prev, error: null, loading: true };\n        }\n        return prev;\n      });\n\n      const pathStr = typeof path === \"function\" ? path(pathParams as TPathParams) : path;\n\n      const url = constructUrl(\n        base,\n        pathStr,\n        { ...context.queryParams, ...queryParams },\n        {\n          queryParamOptions: { ...context.queryParamStringifyOptions, ...queryParamStringifyOptions },\n        },\n      );\n\n      const propsRequestOptions =\n        (typeof requestOptions === \"function\" ? await requestOptions(url, \"GET\") : requestOptions) || {};\n\n      const contextRequestOptions =\n        (typeof context.requestOptions === \"function\"\n          ? await context.requestOptions(url, \"GET\")\n          : context.requestOptions) || {};\n\n      const signal = getAbortSignal();\n\n      const request = new Request(url, merge({}, contextRequestOptions, propsRequestOptions, { signal }));\n      if (context.onRequest) context.onRequest(request);\n\n      try {\n        const response = await fetch(request);\n        const originalResponse = response.clone();\n        if (context.onResponse) context.onResponse(originalResponse);\n        const { data, responseError } = await processResponse(response);\n\n        if (signal && signal.aborted) {\n          return;\n        }\n\n        if (!response.ok || responseError) {\n          const error = {\n            message: `Failed to fetch: ${response.status} ${response.statusText}${responseError ? \" - \" + data : \"\"}`,\n            data,\n            status: response.status,\n          };\n\n          setState(prev => ({\n            ...prev,\n            loading: false,\n            data: null,\n            error,\n            response: originalResponse,\n          }));\n\n          if (!props.localErrorOnly && context.onError) {\n            context.onError(error, () => _fetchData(props, context, abort, getAbortSignal), response);\n          }\n          return;\n        }\n\n        const resolvedData = resolve(data);\n        setState(prev => ({\n          ...prev,\n          error: null,\n          loading: false,\n          data: resolvedData,\n          response: originalResponse,\n        }));\n        return resolvedData;\n      } catch (e) {\n        // avoid state updates when component has been unmounted\n        // and when fetch/processResponse threw an error\n        if (signal && signal.aborted) {\n          return;\n        }\n\n        const error = parseError(e);\n\n        setState(prev => ({\n          ...prev,\n          data: null,\n          loading: false,\n          error,\n        }));\n\n        if (!props.localErrorOnly && context.onError) {\n          context.onError(error, () => _fetchData(props, context, abort, getAbortSignal));\n        }\n\n        return;\n      }\n    },\n    [\n      props.lazy,\n      props.mock,\n      props.path,\n      props.base,\n      props.resolve,\n      props.queryParams,\n      props.requestOptions,\n      props.pathParams,\n      context.base,\n      context.parentPath,\n      context.queryParams,\n      context.requestOptions,\n      abort,\n    ],\n  );\n  const fetchData = useCallback<CancellableFetchData<TData, TError, TQueryParams, TPathParams>>(\n    typeof props.debounce === \"object\"\n      ? debounce<FetchData<TData, TError, TQueryParams, TPathParams>>(\n          _fetchData,\n          props.debounce.wait,\n          props.debounce.options,\n        )\n      : typeof props.debounce === \"number\"\n      ? debounce<FetchData<TData, TError, TQueryParams, TPathParams>>(_fetchData, props.debounce)\n      : props.debounce\n      ? debounce<FetchData<TData, TError, TQueryParams, TPathParams>>(_fetchData)\n      : _fetchData,\n    [_fetchData, props.debounce],\n  );\n\n  useEffect(() => {\n    if (!props.lazy && !props.mock) {\n      fetchData(props, context, abort, getAbortSignal);\n    }\n\n    return () => {\n      if (isCancellable(fetchData)) {\n        fetchData.cancel();\n      }\n      abort();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fetchData, props.lazy, props.mock]);\n\n  const refetch = useCallback(\n    (options: RefetchOptions<TData, TError, TQueryParams, TPathParams> = {}) =>\n      fetchData({ ...props, ...options }, context, abort, getAbortSignal),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [fetchData],\n  );\n\n  return {\n    ...state,\n    ...props.mock, // override the state\n    absolutePath: constructUrl(\n      props.base || context.base,\n      pathStr,\n      {\n        ...context.queryParams,\n        ...props.queryParams,\n      },\n      {\n        queryParamOptions: {\n          ...context.queryParamStringifyOptions,\n          ...props.queryParamStringifyOptions,\n        },\n      },\n    ),\n    cancel: () => {\n      setState({\n        ...state,\n        loading: false,\n      });\n      abort();\n    },\n    refetch,\n  };\n}\n","import merge from \"lodash/merge\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Context } from \"./Context\";\nimport { MutateMethod, MutateState, MutateRequestOptions } from \"./Mutate\";\nimport { Omit, UseGetProps } from \"./useGet\";\nimport { constructUrl } from \"./util/constructUrl\";\nimport { processResponse } from \"./util/processResponse\";\nimport { useAbort } from \"./useAbort\";\nimport { useDeepCompareCallback, useDeepCompareEffect } from \"./util/useDeepCompareEffect\";\nimport { getErrorMessage } from \"./util/parseError\";\n\nexport interface UseMutateProps<TData, TError, TQueryParams, TRequestBody, TPathParams>\n  extends Omit<UseGetProps<TData, TError, TQueryParams, TPathParams>, \"lazy\" | \"debounce\" | \"mock\"> {\n  /**\n   * What HTTP verb are we using?\n   */\n  verb: \"POST\" | \"PUT\" | \"PATCH\" | \"DELETE\";\n  /**\n   * Callback called after the mutation is done.\n   *\n   * @param body - Body given to mutate\n   * @param data - Response data\n   */\n  onMutate?: (body: TRequestBody, data: TData) => void;\n  /**\n   * Developer mode\n   * Override the state with some mocks values and avoid to fetch\n   */\n  mock?: {\n    mutate?: MutateMethod<TData, TRequestBody, TQueryParams, TPathParams>;\n    loading?: boolean;\n  };\n  /**\n   * A function to encode body of DELETE requests when appending it\n   * to an existing path\n   */\n  pathInlineBodyEncode?: typeof encodeURIComponent;\n}\n\nexport interface UseMutateReturn<TData, TError, TRequestBody, TQueryParams, TPathParams>\n  extends MutateState<TData, TError> {\n  /**\n   * Cancel the current fetch\n   */\n  cancel: () => void;\n  /**\n   * Call the mutate endpoint\n   */\n  mutate: MutateMethod<TData, TRequestBody, TQueryParams, TPathParams>;\n}\n\nexport function useMutate<\n  TData = any,\n  TError = any,\n  TQueryParams = { [key: string]: any },\n  TRequestBody = any,\n  TPathParams = unknown\n>(\n  props: UseMutateProps<TData, TError, TQueryParams, TRequestBody, TPathParams>,\n): UseMutateReturn<TData, TError, TRequestBody, TQueryParams, TPathParams>;\n\nexport function useMutate<\n  TData = any,\n  TError = any,\n  TQueryParams = { [key: string]: any },\n  TRequestBody = any,\n  TPathParams = unknown\n>(\n  verb: UseMutateProps<TData, TError, TQueryParams, TRequestBody, TPathParams>[\"verb\"],\n  path: UseMutateProps<TData, TError, TQueryParams, TRequestBody, TPathParams>[\"path\"],\n  props?: Omit<UseMutateProps<TData, TError, TQueryParams, TRequestBody, TPathParams>, \"path\" | \"verb\">,\n): UseMutateReturn<TData, TError, TRequestBody, TQueryParams, TPathParams>;\n\nexport function useMutate<\n  TData = any,\n  TError = any,\n  TQueryParams = { [key: string]: any },\n  TRequestBody = any,\n  TPathParams = unknown\n>(): UseMutateReturn<TData, TError, TRequestBody, TQueryParams, TPathParams> {\n  const props: UseMutateProps<TData, TError, TQueryParams, TRequestBody, TPathParams> =\n    typeof arguments[0] === \"object\" ? arguments[0] : { ...arguments[2], path: arguments[1], verb: arguments[0] };\n\n  const context = useContext(Context);\n  const {\n    verb,\n    base = context.base,\n    path,\n    queryParams = EMPTY_OBJECT,\n    resolve = context.resolve,\n    pathParams = EMPTY_OBJECT,\n  } = props;\n  const isDelete = verb === \"DELETE\";\n\n  const [state, setState] = useState<MutateState<TData, TError>>({\n    error: null,\n    loading: false,\n  });\n\n  const { abort, getAbortSignal } = useAbort();\n\n  // Cancel the fetch on unmount\n  useEffect(() => () => abort(), [abort]);\n\n  const { pathInlineBodyEncode, queryParamStringifyOptions, requestOptions, localErrorOnly, onMutate } = props;\n\n  const effectDependencies = [\n    path,\n    pathParams,\n    queryParams,\n    verb,\n    isDelete,\n    base,\n    context,\n    queryParamStringifyOptions,\n    requestOptions,\n    onMutate,\n    abort,\n    pathInlineBodyEncode,\n    localErrorOnly,\n    resolve,\n  ];\n  const mutate = useDeepCompareCallback<MutateMethod<TData, TRequestBody, TQueryParams, TPathParams>>(\n    async (body: TRequestBody, mutateRequestOptions?: MutateRequestOptions<TQueryParams, TPathParams>) => {\n      const signal = getAbortSignal();\n\n      setState(prevState => {\n        if (prevState.error || !prevState.loading) {\n          return { ...prevState, loading: true, error: null };\n        }\n        return prevState;\n      });\n\n      const pathStr =\n        typeof path === \"function\" ? path(mutateRequestOptions?.pathParams || (pathParams as TPathParams)) : path;\n\n      const pathParts = [pathStr];\n\n      const options: RequestInit = {\n        method: verb,\n      };\n\n      // don't set content-type when body is of type FormData\n      if (!(body instanceof FormData)) {\n        options.headers = { \"content-type\": typeof body === \"object\" ? \"application/json\" : \"text/plain\" };\n      }\n\n      if (body instanceof FormData) {\n        options.body = body;\n      } else if (typeof body === \"object\") {\n        options.body = JSON.stringify(body);\n      } else if (isDelete && body !== undefined) {\n        const possiblyEncodedBody = pathInlineBodyEncode ? pathInlineBodyEncode(String(body)) : String(body);\n\n        pathParts.push(possiblyEncodedBody);\n      } else {\n        options.body = (body as unknown) as string;\n      }\n\n      const url = constructUrl(\n        base,\n        pathParts.join(\"/\"),\n        { ...context.queryParams, ...queryParams, ...mutateRequestOptions?.queryParams },\n        {\n          queryParamOptions: { ...context.queryParamStringifyOptions, ...queryParamStringifyOptions },\n        },\n      );\n\n      const propsRequestOptions =\n        (typeof requestOptions === \"function\" ? await requestOptions(url, verb, body) : requestOptions) || {};\n\n      const contextRequestOptions =\n        (typeof context.requestOptions === \"function\"\n          ? await context.requestOptions(url, verb, body)\n          : context.requestOptions) || {};\n\n      const request = new Request(\n        url,\n        merge({}, contextRequestOptions, options, propsRequestOptions, mutateRequestOptions, { signal }),\n      );\n      if (context.onRequest) context.onRequest(request);\n\n      let response: Response;\n      try {\n        response = await fetch(request);\n        if (context.onResponse) context.onResponse(response.clone());\n      } catch (e) {\n        const error = {\n          message: `Failed to fetch: ${getErrorMessage(e)}`,\n          data: \"\",\n        };\n        setState({\n          error,\n          loading: false,\n        });\n\n        if (!localErrorOnly && context.onError) {\n          context.onError(error, () => mutate(body, mutateRequestOptions));\n        }\n\n        throw error;\n      }\n\n      const { data: rawData, responseError } = await processResponse(response);\n\n      let data: TData | any; // `any` -> data in error case\n      try {\n        data = resolve ? resolve(rawData) : rawData;\n      } catch (e) {\n        // avoid state updates when component has been unmounted\n        // and when fetch/processResponse threw an error\n        if (signal && signal.aborted) {\n          return;\n        }\n\n        const error = {\n          data: getErrorMessage(e),\n          message: `Failed to resolve: ${getErrorMessage(e)}`,\n        };\n\n        setState(prevState => ({\n          ...prevState,\n          error,\n          loading: false,\n        }));\n        throw e;\n      }\n\n      if (signal && signal.aborted) {\n        return;\n      }\n\n      if (!response.ok || responseError) {\n        const error = {\n          data,\n          message: `Failed to fetch: ${response.status} ${response.statusText}`,\n          status: response.status,\n        };\n\n        setState(prevState => ({\n          ...prevState,\n          error,\n          loading: false,\n        }));\n\n        if (!localErrorOnly && context.onError) {\n          context.onError(error, () => mutate(body), response);\n        }\n\n        throw error;\n      }\n\n      setState(prevState => ({ ...prevState, loading: false }));\n\n      if (onMutate) {\n        onMutate(body, data);\n      }\n\n      return data;\n    },\n    effectDependencies,\n  );\n  useDeepCompareEffect(() => {\n    if (state.loading) {\n      abort();\n    }\n  }, effectDependencies);\n\n  return {\n    ...state,\n    mutate,\n    ...props.mock,\n    cancel: () => {\n      setState(prevState => ({\n        ...prevState,\n        loading: false,\n      }));\n      abort();\n    },\n  };\n}\n\n// Declaring this in order to have a thing with stable identity\nconst EMPTY_OBJECT = {};\n"],"names":["undefined","Context","React","base","parentPath","resolve","data","requestOptions","onError","noop","onRequest","onResponse","queryParams","queryParamStringifyOptions","children","RestfulReactProvider","render","props","value","Provider","RestfulReactConsumer","Consumer","composeUrl","path","composedPath","composePath","startsWith","endsWith","slice","length","url","parseError","e","msg","parseErrorMessage","message","errMessage","Error","getErrorMessage","processResponse","response","status","responseError","headers","get","includes","json","text","resolveData","resolvedData","resolveError","resolvedDataOrPromise","then","JSON","stringify","error","constructUrl","resolvePathOptions","queryParamOptions","stripTrailingSlash","normalizedBase","trimmedPath","encodedPathWithParams","Object","keys","qs","composed","Boolean","ContextlessGet","AbortController","abortController","signal","loading","lazy","extraOptions","extraHeaders","options","Headers","requestPath","thisRequestOptions","__internal_hasExplicitBase","state","setState","makeRequestPath","concatPath","Request","getRequestOptions","request","fetch","originalResponse","clone","aborted","ok","statusText","localErrorOnly","resolved","debounce","wait","componentDidMount","componentDidUpdate","prevProps","isEqual","toString","componentWillUnmount","abort","refetch","absolutePath","unresolvedData","Get","contextProps","ContextlessPoll","previousData","lastResponse","polling","finished","nextData","equal","keepPolling","until","stop","interval","lastPollIndex","Prefer","isResponseOk","Promise","isModified","prevState","resolvePromise","setTimeout","cycle","start","meta","states","actions","Poll","method","contextRequestOptions","propsRequestOptions","merge","ContextlessMutate","body","mutateRequestOptions","verb","providerRequestOptions","pathInlineBodyEncode","pathWithPossibleBody","FormData","has","set","mutate","rawData","onMutate","Mutate","x","y","isEqualWith","a","b","useDeepCompareMemoize","ref","useRef","current","useDeepCompareEffect","effect","deps","useEffect","useDeepCompareCallback","callback","useCallback","createAbortController","useAbort","instance","getAbortSignal","isCancellable","func","cancel","flush","useGet","arguments","context","useContext","pathParams","useState","pathStr","_fetchData","d","prev","mock","fetchData","useMutate","EMPTY_OBJECT","isDelete","effectDependencies","pathParts","possiblyEncodedBody","String","push","join"],"mappings":"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"}